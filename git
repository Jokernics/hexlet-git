git diff  - история изменений в рабочей директории (--staged - показывает еще и индекс)
git log - история коммитов (сверху последний, -p - выводит с diff)
git show - показывает изменения в рамках одного коммита по первым 8 цифрам
git blame - кто последним менял конкретную строку в файле и в каком коммите
git grep - поиск по строчке, -i - без учета регистра
git grep Hexlet 5120bea3 - поиск в конкретном коммите
git restore --staged - переместить изменения из индекса в рабочую область
git revert aa600a43cb164408e4ad87d216bc679d097f1a6c -  Фактически она сводится к созданию ещё одного коммита, который выполняет изменения противоположные тому коммиту, который отменяется.
git reset --hard HEAD~ - где hard - полное удаление, Без него git reset отменит коммит, но не удалит его, а поместит все изменения этого коммита в рабочую директорию, так что с ними можно будет продолжить работать. HEAD~ означает "один коммит от последнего коммита". Если бы мы хотели удалить два последних коммита, то могли бы написать HEAD~2.

